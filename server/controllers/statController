const Event = require("../models/Event");
const Ticket = require("../models/Ticket");

exports.getStats = async (req, res) => {
  try {
    const userId = req.user.id;

    const events = await Event.find({ createdBy: userId });
    const eventIds = events.map((e) => e._id);

    const tickets = await Ticket.find({ event: { $in: eventIds } });

    const totalTicketsSold = tickets.reduce(
      (acc, ticket) => acc + ticket.quantity,
      0
    );

    const totalRevenue = tickets.reduce((acc, ticket) => {
      const event = events.find((e) => e._id.equals(ticket.event));
      if (!event) return acc;
      return acc + event.ticketPrice * ticket.quantity;
    }, 0);

    const currentlyLive = events.filter((e) => e.liveStream?.isLive).length;

    // Calculate top events
    const eventSalesMap = {};
    tickets.forEach((ticket) => {
      const eventId = ticket.event.toString();
      eventSalesMap[eventId] = (eventSalesMap[eventId] || 0) + ticket.quantity;
    });

    const topEvents = Object.entries(eventSalesMap)
      .sort((a, b) => b[1] - a[1]) // sort by quantity sold descending
      .slice(0, 5) // top 5
      .map(([eventId, quantitySold]) => {
        const event = events.find((e) => e._id.toString() === eventId);
        return {
          title: event?.title || "Unknown Event",
          quantitySold,
        };
      });

    res.json({
      totalEvents: events.length,
      totalTicketsSold,
      totalRevenue,
      currentlyLive,
      topEvents,
    });

  } catch (err) {
    console.error(err);
    res.status(500).json({ message: "Server error" });
  }
};
